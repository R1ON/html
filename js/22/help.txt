1. Определить, какие функции подходят для задач
Для 2 и 3 подойдет forEach

Для 4 - подойдет includes/find/some/filter

Для 5 forEach/filter+map





2. [1,2,3,4,5] => 15
Заводим переменную result.
Бегаем по массиву и прибавляем к result текущее число из массива






3. ['my', 'name', 'is', 'Alex'] => 'my name is Alex'
Все тоже самое. Заводим переменную result.
Бегаем по массиву и конкатенируем к result текущую строку из массива




4. const badAge = 20;
   [15, 10, 20, 30] - тут есть badAge? true/false
Самое простое решение - includes.
Мы им можем воспользоваться, так как у нас простая структура данных (числа).

Если использовать find, то по итогу он нам вернет,
либо 20 (если он найдет это число в массиве). Либо undefined.
И мы можем это переконвертировать в boolean любым способом (гуглите/вспоминайте).

Если использовать some, то он сразу вернет true/false и не придется замарачиваться с
конвертацией.

Если используем filter, то можем отфильтровать массив и
проверить его длину. Если длина = 0, значит там нет такого элемента.




5.
[{
   name: 'Alex',
   age: 20,
}, {
   name: 'Anna',
   age: 30,
}, {
    name: 'John',
    age: 10
}] => age > 18 => вывести только name
   => ['Alex', 'Anna']

Если используем forEach, то тут все просто. Заводим пустой массив и
при помощи push() добавляем в этот массив имена пользователей, которые
соответствуют условию (age > 18).

Если используем filter+map, то сначала мы должны отфильтровать массив.
И получить массив, где будут только те, кому больше 18.
Далее используем map и конвертируем такой массив в массив строк.
А в качестве строк используем поле name (имена наших пользователей)